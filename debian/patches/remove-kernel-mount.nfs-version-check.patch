Last-Update: 2014-03-07
Forwarded: yes
Bug-Debian: http://bugs.debian.org/678555
Bug-Ubuntu: http://pad.lv/1016673
From: Michael Tokarev <mjt@tls.msk.ru>
Subject: remove kernel and mount.nfs version check

autofs daemon checks for kernel and mount.nfs versions and uses
slightly different code if kernel is older than 2.6.22 or mount.nfs
does not use string options.  Both cases are of very old, pre-squeeze,
versions.

But because automount spawns mount.nfs at startup, this interferes
with systemd and upstart daemon pid tracking mechanism (they track
pid of mount.nfs, not automount as a result).  Fix this by removing
the check entirely.

Note that for current Debian and Ubuntu versions, no versioned Breaks
are necessary.

The patch is based on a similar patch by Dmitrijs Ledkovs.

--- a/daemon/automount.c
+++ b/daemon/automount.c
@@ -66,9 +66,6 @@
 
 unsigned int mp_mode = 0755;
 
-unsigned int nfs_mount_uses_string_options = 0;
-static struct nfs_mount_vers vers, check = {1, 1, 1};
-
 #define FIFO_BUF_SIZE		25
 static int cmd_pipe_fifo = -1;
 
@@ -1259,8 +1256,6 @@
 	if (status)
 		fatal(status);
 
-	nfs_mount_uses_string_options = check_nfs_mount_version(&vers, &check);
-
 	master_mutex_lock();
 	/* Already doing a map read or shutdown or no mounts */
 	if (master->reading) {
@@ -2284,8 +2279,6 @@
 		exit(1);
 	}
 
-	nfs_mount_uses_string_options = check_nfs_mount_version(&vers, &check);
-
 	flags = defaults_get_browse_mode() ? DAEMON_FLAGS_GHOST : 0;
 	flags |= DAEMON_FLAGS_CHECK_DAEMON;
 
--- a/include/mounts.h
+++ b/include/mounts.h
@@ -125,14 +125,7 @@
 	struct mnt_list *next;
 };
 
-struct nfs_mount_vers {
-	unsigned int major;
-	unsigned int minor;
-	unsigned int fix;
-};
 unsigned int linux_version_code(void);
-int check_nfs_mount_version(struct nfs_mount_vers *, struct nfs_mount_vers *);
-extern unsigned int nfs_mount_uses_string_options;
 
 int mount_fullpath(char *fullpath, size_t max_len,
 		   const char *root, size_t root_len, const char *name);
--- a/modules/replicated.c
+++ b/modules/replicated.c
@@ -764,9 +764,8 @@
 	 * But also allow the MOUNT_WAIT configuration parameter to override
 	 * the probing.
 	 */
-	if (nfs_mount_uses_string_options &&
-	    defaults_get_mount_wait() == -1 &&
-	   (kern_vers = linux_version_code()) > KERNEL_VERSION(2, 6, 22)) {
+	/* we assume kernel and mount.nfs are recent enough */
+	if (defaults_get_mount_wait() == -1) {
 		if (!this)
 			return 1;
 	} else {
--- a/lib/mounts.c
+++ b/lib/mounts.c
@@ -257,6 +257,7 @@
 	return fd;
 }
 
+#if 0
 #ifdef HAVE_MOUNT_NFS
 static int extract_version(char *start, struct nfs_mount_vers *vers)
 {
@@ -397,6 +398,7 @@
 	return 0;
 }
 #endif
+#endif
 
 int mount_fullpath(char *fullpath, size_t max_len,
 		   const char *root, size_t root_len, const char *name)
